# jdbc
jdbc.driver=org.postgresql.Driver
jdbc.url=jdbc:postgresql://thinkehr-db/thinkehr
jdbc.username=thinkehr
jdbc.password=thinkehr

# Set this to true when using Azure SQL, jdbc.driver has to be set to SQL server
#sqlServer.azure=false

# db connection pool
db.pool.minIdle=1
db.pool.maxActive=40
db.pool.maxAge=18000
db.pool.connectionTimeout=30000

# Reindexing parameters
reindexing.threads=5
reindexing.batch_size=50

# Elasticsearch (clustered edition)
# external - connecting to an existing elastic cluster
#elasticsearch.type=external
#elasticsearch.connection=host1:port1,host2:port2,...

# inprocess - node in same JVM
elasticsearch.type=inprocess
elasticsearch.clustername=thinkehr
# node name: patterns allowed are %h=hostname, %a=address, %p=process name
#elasticsearch.nodename=n_%h
elasticsearch.directory=indexes
elasticsearch.shards=16
elasticsearch.replicas=0
#elasticsearch.http=false
#elasticsearch.backupslimit=10
#elasticsearch.backupdir=/tmp/backups
#elasticsearch.waitForGreen=1s
#elasticsearch.max_snapshot_bytes_per_sec=40mb

# ThinkEhr
# id of the system (this will be put into composition uid) - this is just the default - set this per domain via admin console
systemId=systemid.openehr.org

# WebServices
ws.port=7777

# Remoting
remoting.port=7778
httpremoting.port=7779

# ip address/hostname as visible by clients (only needed for clustering)
#httpremoting.host=192.168.100.17

# Admin console, REST
web.port=8080

# Max number of simultaneous connections
connector.maxPoolSize=200

# Auditing - if nothing is specified no auditing will be performed
#audit.type=xmlfile
#audit.params=./logs/audit.log

# demographics proxy
#demographics.rest.url=http://host:port/prefix
#demographics.rest.username=uname
#demographics.rest.password=pass
#demographics.subjectNamespace=namespace

# max number of results when no TOP/LIMIT is specified
resultSizeLimit=1000

# cache for compositions
compositionCache=true
# max size of serialized composition in bytes that will still be cached (-1 = no limit)
# compositionCache.maxSize=-1
# put compositions written as TDDs into cache
composition.writeTDD.cache=true
# cache for query results
queryCache=true
# maximum query result size to still be cached
queryCacheLimit=100
# cache for views
viewCache=true

# event queue
eventQueue.host=localhost
eventQueue.port=5445
eventQueue.name=ThinkEhrEvents

# Terminology adapter.
tadapt.url=
tadapt.enabled=false
tadapt.unreachable.ignore=false

# data from ehr_status.other_details indexed in each composition
index.ehr.paths=

# async/streaming queries
query.async.threads=20
#query.async.queueSize=1000

# parallel queries
#query.parallel.threads=20
#query.parallel.maxThreads=20
#query.parallel.queueSize=100

# async thread pool for events, reindex, etc
#async.threads=2
#async.maxThreads=5
#async.queueSize=50

# thread pool size for bulkimport
bulkimport.threads=2

# REST
rest.version=v1
rest.doc.provider=swagger
rest.error.wiki=https://confluence.ehrvendor.com/display/ehrrest/
rest.demographics.url=http://marand-demographics:8384/rest/v1/demographics/
rest.contactEmail=info@ehrvendor.com

# The default expiration duration (in days) for draft compositions
thinkehr.draft.expireInDays=7
# Whether to expunge expired draft compositions 30 seconds after startup
thinkehr.draft.expungeOnStartup=false

# Authentication
# Realm - for authentication headers
#rest.realm=Think!EHR REST
# support Basic
rest.allowBasicAuthentication=true
# support OAuth2 - OpenId Connect
rest.allowOpenIdAuthentication=false

# Admin console authentication
thinkehr.admin.console.access.expression=authenticated
# To limit to ip address use
#thinkehr.admin.console.access.expression=authenticated and (hasIpAddress('127.0.0.1') or hasIpAddress('205.77.1.1/24'))

# Stats periods: ISO8601 time periods, i.e. P1M,P1W,P1D,PT1H
thinkehr.stats.periods=PT1H
# Size of asynchronous call stat writers thread pool
thinkehr.stats.log.writer.threads=2
thinkehr.stats.log.pattern=logs/calls_
# Whether stats log files are deleted when they're closed (useful for tests)
thinkehr.stats.log.deleteOnClose=false
# Whether to write stats to disk on JVM exit
thinkehr.stats.writeLogOnExit=true

# Licensing warning limits
# number of days before expiration to start warning
#licenseExpirationWarnPeriodDays=30
# percentage of ehr count limit to start warning
#licenseEhrLimitWarnPercentage=90

# Various logging options
# log parameters for service calls taking too long
#logParametersMinDuration=-1
# log query phases
#logQueryPhases=false
# log queries taking too long
#logMinDurationQuery=-1
# JS Notifier registry
# notifierRegistry.smtpHost=
# thinkehr.mailFrom=Think!Ehr <thinkehr@ehrscape.com>

# SSO Configuration - required when rest.allowOpenIdAuthentication=true
#sso.clientId=thinkehr-rest,clientapp1,clientapp2
#sso.clientSecret=**secret***
#sso.defaultRealm=master
#sso.issuer=https://authorizationserver:port/auth/$realm/master
#sso.jwksEndpoint=https://authorizationserver:port/auth/realms/$realm/protocol/openid-connect/certs
#sso.tokenCacheTimeMs=60000
#sso.tokenInfoEndpoint=https://authorizationserver:port/auth/realms/$realm/protocol/openid-connect/tokeninfo # needed when not using jwts
#sso.accessTokenValidator=jwt # or keycloak via tokeninfo endpoint
#sso.tokenDataExtractor=keycloak # or google
